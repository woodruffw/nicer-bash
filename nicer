#!/usr/bin/env bash

# convenience output functions

function error {
	printf "ERROR: ${*}\n"
}

alias err=error

function error! {
	>&2 printf "ERROR: ${*}\n"
}

alias err!=error!

function warn {
	printf "WARNING: ${*}\n"
}

function warn! {
	>&2 printf "WARNING: ${*}\n"
}

function info {
	printf "INFO: ${*}\n"
}

function info! {
	>&2 printf "INFO: ${*}\n"
}

# file/string checking functions

function exists? {
	[[ -e "${1}" ]]
	return ${?}
}

function file? {
	[[ -f "${1}" ]]
	return ${?}
}

function directory? {
	[[ -d "${1}" ]]
	return ${?}
}

alias dir?=directory?

function readable? {
	[[ -r "${1}" ]]
	return ${?}
}

alias read?=readable?

function writeable? {
	[[ -w "${1}" ]]
	return ${?}
}

alias write?=writeable?

function executable? {
	[[ -x "${1}" ]]
	return ${?}
}

alias exec?=executable?

function empty? {
	[[ -z "${1}" ]]
	return ${?}
}

function nonempty? {
	[[ -n "${1}" ]]
	return ${?}
}

# dependency/compatibility functions

function installed? {
	if empty? "${1}"; then
		error! "installed?: missing argument"
		return 1
	else
		local cmd=$(command -v "${1}")

		nonempty? "${cmd}" && file? "${cmd}"
		return ${?}
	fi
}

function require {
	if empty? "{1}"; then
		error! "require: missing argument"
	else
		local func="__require_${1}"

		if [[ $(type -t ${func}) != "function" ]]; then
			error! "require: unknown requirement: ${1}"
		else
			${func}
			return ${?}
		fi
	fi
}

function require! {
	if empty? "${1}"; then
		error! "require!: missing argument"
		return 1
	else
		require "${1}" || (error! "unsatisfied requirement: ${1}" ; return 1)
	fi
}

function __require_bash2 {
	[[ "${BASH_VERSINFO[0]}" -eq 2 ]]
	return ${?}
}

function __require_bash3 {
	[[ "${BASH_VERSINFO[0]}" -eq 3 ]]
	return ${?}
}

function __require_bash4 {
	[[ "${BASH_VERSINFO[0]}" -eq 4 ]]
	return ${?}
}

function __require_bash5 {
	[[ "${BASH_VERSINFO[0]}" -eq 5 ]]
	return ${?}
}

function __require_python {
	installed? python
	return ${?}
}

function __require_python2 {
	local py="python -c 'import sys; print(sys.version_info[0])'"

	installed? python2 || [[ $(${py}) -eq 2 ]]
	return ${?}
}

function __require_python3 {
	local py="python -c 'import sys; print(sys.version_info[0])'"

	installed? python3 || [[ $(${py}) -eq 2 ]]
	return ${1}
}

function __require_perl {
	installed? perl
	return ${?}
}

function __require_perl5 {
	local pl="perl -e 'print int($]);'"

	installed? perl && [[ $(${pl}) -eq 5 ]]
	return ${?}
}

function __require_ruby {
	installed? ruby
	return ${?}
}
